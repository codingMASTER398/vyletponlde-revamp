/* CSS is my worst nightmare fr */

.songGuessList {
  display: flex;
  align-items: center;
  justify-content: center;
  flex-direction: column;
  gap: 12px;
}

.songGuessList.in {
  animation: roundEndIn 1s;
}

.guessWrapper {
  width: 400px;
  aspect-ratio: 6/1;
  padding: 0.5rem;
  padding-left: 1rem;
  padding-right: 1rem;
  box-sizing: border-box;

  position: relative;

  transition: 0.1s;
  box-shadow:
    0 8px 8px rgba(0, 0, 0, 0.1),
    0 16px 16px 8px rgba(0, 0, 0, 0.1);
  color: black;
  border-radius: 4.5px;
}
body.dark .guessWrapper {
  box-shadow: 0 8px 3px rgba(255, 255, 255, 0.3);
}

body:not(.reduceAqua) .guessWrapper:before {
  width: 100%;
  height: 100%;
  background: repeating-linear-gradient(
    0deg,
    var(--s-2),
    var(--s-2) 3px,
    var(--s-0),
    var(--s-0) 6px
  );
  content: "";
  position: absolute;
  top: 0;
  left: 0;
  mask-image: linear-gradient(0deg, rgba(0, 0, 0, 0.5) 0%, transparent 50%);
  pointer-events: none;
}

body:not(.reduceAqua).dark .guessWrapper:before {
  opacity: 0.5;
}

.guessWrapper[disabled] {
  pointer-events: none;
  filter: brightness(0.8);
}
.guessWrapper.done input {
  pointer-events: none;
}

.guessWrapper.yellow .progress {
  background-color: #fda361;
}
.guessWrapper.red .progress {
  background-color: #f55962;
}
.guessWrapper.green .progress {
  background-color: #6ef4ad;
}

.guessWrapper .progress,
.progress .full {
  height: 100%;
  width: 100%;
  position: absolute;
  top: 0;
  left: 0;
  z-index: -1;

  background-color: #e9e9e9;
  box-shadow:
    0 6px 12px rgba(0, 0, 0, 0.1) inset,
    0 3px 3px rgba(255, 255, 255, 0.4) inset,
    0 -12px 12px rgba(255, 255, 255, 0.2) inset,
    0 3px 3px rgba(0, 0, 0, 0.3);
  border-radius: 4.5px;
}

.progress .full {
  background: linear-gradient(90deg, #8bc9ff11, #8bc9ff);
}
.progress .full.t {
  transition: 0.05s;
}
.progress .full.out {
  animation: progressFadeOut 1s forwards;
}
@keyframes progressFadeOut {
  100% {
    opacity: 0;
  }
}

.guessContent {
  display: flex;
  align-items: center;
  justify-content: space-between;
  gap: 0.5rem;
}

/* Play & Skip buttons */
.guessContent .buttons {
  width: 50px;
  z-index: 1;
}

.guessContent .buttons button {
  border: none;
  background: transparent;
  cursor: pointer;
}

.guessContent .buttons button img {
  height: 30px;
  filter: grayscale(1) brightness(0);
  transition: 0.2s;
}
.guessContent .buttons button img:hover {
  filter: none;
}
body:not(.reduceMotion) .guessContent .buttons button:active img {
  transform: scale(0.5);
  transition: 0.1s;
  filter: drop-shadow(6px 6px 12px white) drop-shadow(-6px 6px 12px white)
    drop-shadow(-6px -6px 12px white) drop-shadow(6px -6px 12px white);
}

body:not(.reduceMotion) .guessWrapper:has(button:active) {
  transform: translateY(6px);
  transition: 0.1s;
  box-shadow: none;
}

/* the uh on the right when you the guess */

.guessRight {
  width: 100%;
  text-align: right;
}

.guessRight > p {
  margin: 0;
  margin-top: 0.5rem;
}

.guessRight .resultBox {
  position: absolute;
  background-color: #ececec;
  width: 316px;
  transform: translateY(6px);
  cursor: pointer;
  box-shadow:
    0 0 3px rgba(0, 0, 0, 0.2),
    0 2px 2px white inset;
}

.guessRight .resultBox p {
  margin: 0;
  padding: 0.15rem;
  padding-left: 0.5rem;
  box-sizing: border-box;
  font-size: small;
  text-align: left;
}

.guessInput {
  width: 100%;
  border: none;
  aspect-ratio: 12/1;
  background: #fff;

  font-family: "MozillaText";
  padding-left: 1rem;
  box-sizing: border-box;

  box-shadow:
    0 2px 6px #00000022 inset,
    0 3px 3px rgba(0, 0, 0, 0.1);
}

/* The uh finished song thing at the bottom */
.finishedSong {
  width: 500px;
  min-height: 150px;
  background: linear-gradient(45deg, #eee 0%, #d8d8d8 100%);

  box-shadow:
    0 -3px 1px white inset,
    0 -12px 12px rgba(0, 0, 0, 0.3) inset,
    0 -3px 6px white inset,
    0 0px 24px var(--bxs-02),
    0 0px 3px var(--bxs-02);

  border-radius: 4.5px;

  padding-left: 1rem;
  padding-right: 1rem;
  padding-bottom: 0.3rem;

  display: flex;
  align-items: center;
  justify-content: space-between;
}

body.dark .finishedSong {
  background: linear-gradient(45deg, #04013a 0%, #000010 100%);

  box-shadow:
    0 -3px 1px rgba(255, 255, 255, 0.3) inset,
    0 -12px 12px rgba(0, 0, 0, 0.3) inset,
    0 -3px 6px rgba(255, 255, 255, 0.3) inset,
    0 0px 24px var(--bxs-02),
    0 0px 3px var(--bxs-02);
}

.finishedSong img {
  height: 120px;
  border-radius: 3.5px;
  box-shadow:
    0 0 6px rgba(0, 0, 0, 0.2),
    0 0 6px 6px rgba(255, 255, 255, 0.5);
}

body.dark .finishedSong img {
    box-shadow:
    0 0 6px rgba(0, 0, 0, 0.2),
    0 0 6px 6px rgba(255, 255, 255, 0.2);
}

.finishedSong .data {
  width: 100%;
  padding-left: 1rem;

  display: flex;
  justify-content: space-between;
  flex-direction: column;
}

.finishedSong .data * {
  margin: 0;
  margin-bottom: 6px;
}

.roundEnd:not(.in) {
  display: none;
}

body:not(.reduceMotion) .roundEnd.in {
  animation: roundEndIn 0.5s;
}

body:not(.reduceMotion) .roundEnd.in button {
  animation: roundEndIn 1s;
}

@keyframes roundEndIn {
  0% {
    opacity: 0;
    transform: translateY(12px);
  }
}
